#!/bin/bash
## Required PBS Directives --------------------------------------
#PBS -A ERDCS97270PET
#PBS -q standard
<<<<<<< HEAD
#PBS -l select=2:ncpus=36:mpiprocs=36
#PBS -l walltime=24:00:00
=======
#PBS -l select=20:ncpus=36:mpiprocs=36
#PBS -l walltime=01:00:00
>>>>>>> b55ff2259f36705faf34d4f296c30b54e7a97547
#PBS -j oe
#PBS -V

# PBS -l select=N1:ncpus=36:mpiprocs=N2
# The value of ncpus refers to the number of physical cores available on each node. Standard compute nodes on Topaz will require ncpus=36.

# An exception to this rule is the transfer queue, which uses the directive below:
# PBS -l select=1:ncpus=1

# queue: # debug standard background

<<<<<<< HEAD
export myProject='/p/home/dantopa/hpc/fortran/tools/test/stress/d_shared/'
=======
export myProject=${myGit}'/fortran/tools/test/stress/e_shared/'
>>>>>>> b55ff2259f36705faf34d4f296c30b54e7a97547
echo $myProject
cd ${myProject}
module switch compiler/intel compiler/gcc/5.3.0
make
rm -rf *.o *.mod *.smod *.dSYM

## Execution Block ----------------------------------------------
# Environment Setup
# cd to your scratch directory in /work
cd ${WORKDIR}

# create a job-specific subdirectory based on JOBID and cd to it
JOBID=`echo ${PBS_JOBID} | cut -d '.' -f 1`
if [ ! -d ${JOBID} ]; then
  mkdir -p ${JOBID}
fi
cd ${JOBID}

## Launching -----------------------------------------------------
# copy executable from $HOME and submit it
cp -a ${myProject}/. .

# CRAY MPICH parallel code built with the CRAY compiler.
# mpiexec_mpt command for CRAY MPICH2 codes and ccmrun for any serial, shared-memory, or non-native MPI codes
<<<<<<< HEAD
${fortran_execute_mpi} -n 72 ./cpu topaz > out.dat
=======
${fortran_execute_mpi} -n 720 ./cpu  > out.dat
>>>>>>> b55ff2259f36705faf34d4f296c30b54e7a97547

## Clean up -----------------------------------------------------
# Remove temporary files
rm -rf *.o *.mod *.smod *.dSYM

# http://www.erdc.hpc.mil/docs/topazPbsGuide.html
# submit it to PBS for execution e.g. "qsub run.pbs"
