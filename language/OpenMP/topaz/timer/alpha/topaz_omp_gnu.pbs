#!/bin/bash
## Required PBS Directives --------------------------------------
#PBS -A ERDCS97270PET
#PBS -q debug
#PBS -l select=1:ncpus=36:mpiprocs=36
#PBS -l walltime=01:00:00
#PBS -j oe
#PBS -V

# PBS -l select=N1:ncpus=36:mpiprocs=N2
# The value of ncpus refers to the number of physical cores available on each node. Standard compute nodes on Topaz will require ncpus=36.

# An exception to this rule is the transfer queue, which uses the directive below:
# PBS -l select=1:ncpus=1

# queue: # debug standard background

export myProject=${myGit}'/fortran/language/OpenMP/topaz/timer/alpha'
echo $myProject
cd ${myProject}
dan
module switch compiler/intel compiler/gcc/5.3.0
make
gfortran -fopenmp ${gflags} threader.f08
rm -rf *.o *.mod *.smod *.dSYM

## Execution Block ----------------------------------------------
# Environment Setup
# cd to your scratch directory in /work
cd ${WORKDIR}

# create a job-specific subdirectory based on JOBID and cd to it
JOBID=`echo ${PBS_JOBID} | cut -d '.' -f 1`
if [ ! -d ${JOBID} ]; then
  mkdir -p ${JOBID}
fi
cd ${JOBID}

## Launching -----------------------------------------------------
# copy executable from $HOME and submit it
cp -a ${myProject}/. .

export OMP_NUM_THREADS=2
./a.out  > out02.dat
export OMP_NUM_THREADS=4
./a.out  >> out02.dat
export OMP_NUM_THREADS=8
./a.out  > out08.dat
export OMP_NUM_THREADS=16
./a.out  > out16.dat
export OMP_NUM_THREADS=32
./a.out  > out32.dat
export OMP_NUM_THREADS=64
./a.out  > out64.dat
export OMP_NUM_THREADS=128
./a.out > out128.dat
export OMP_NUM_THREADS=${BC_CORES_PER_NODE}
./a.out > outcpn.dat

## Clean up -----------------------------------------------------
# Remove temporary files
rm -rf *.o *.mod *.smod *.dSYM

# http://www.erdc.hpc.mil/docs/topazPbsGuide.html
# submit it to PBS for execution e.g. "qsub run.pbs"

